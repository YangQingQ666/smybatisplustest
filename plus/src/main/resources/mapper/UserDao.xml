<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.plus.mapper.UserDao">

    <resultMap type="com.example.plus.entity.User" id="UserMap">
        <result property="userid" column="userid" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="usertel" column="usertel" jdbcType="VARCHAR"/>
        <result property="usersex" column="usersex" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select userid,
               username,
               usertel,
               usersex,
               password,
               salt
        from test1.user
        where userid = #{userid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select userid,
               username,
               usertel,
               usersex,
               password,
               salt
        from test1.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        userid, username, usertel, usersex, password, salt
        from test1.user
        <where>
            <if test="userid != null">
                and userid = #{userid}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="usertel != null and usertel != ''">
                and usertel = #{usertel}
            </if>
            <if test="usersex != null and usersex != ''">
                and usersex = #{usersex}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userid" useGeneratedKeys="true">
        insert into test1.user(username, usertel, usersex, password, salt)
        values (#{username}, #{usertel}, #{usersex}, #{password}, #{salt})
    </insert>

    <insert id="insertBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into test1.user(username, usertel, usersex, password, salt)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.usertel}, #{entity.usersex}, #{entity.password}, #{entity.salt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into test1.user(username, usertel, usersex, password, salt)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.usertel}, #{entity.usersex}, #{entity.password}, #{entity.salt})
        </foreach>
        on duplicate key update
        username = values(username) , usertel = values(usertel) , usersex = values(usersex) , password =
        values(password) , salt = values(salt)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test1.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="usertel != null and usertel != ''">
                usertel = #{usertel},
            </if>
            <if test="usersex != null and usersex != ''">
                usersex = #{usersex},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
        </set>
        where userid = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from test1.user
        where userid = #{userid}
    </delete>

</mapper>

